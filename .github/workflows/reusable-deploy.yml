name: Reusable Deploy to Kubernetes

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image-tag:
        required: true
        type: string

env:
  HELM_VERSION: '3.12.0'
  KIND_VERSION: 'v0.20.0'
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/devops-todolist

jobs:
  deploy:
    name: Deploy to ${{ inputs.environment }}
    runs-on: ubuntu-latest

    steps:
    - name: Download repository content
      uses: actions/download-artifact@v4
      with:
        name: repository-content
        path: .

    - name: Download Helm chart package
      uses: actions/download-artifact@v4
      with:
        name: helm-chart-package
        path: .

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Set up Kind
      run: |
        curl -Lo ./kind https://kind.sigs.k8s.io/dl/${{ env.KIND_VERSION }}/kind-linux-amd64
        chmod +x ./kind
        sudo mv ./kind /usr/local/bin/kind

    - name: Create Kind cluster
      run: |
        if [ -f "cluster.yml" ]; then
          kind create cluster --config cluster.yml --name ${{ inputs.environment }}
        else
          kind create cluster --name ${{ inputs.environment }}
        fi
        kubectl cluster-info --context kind-${{ inputs.environment }}

    - name: Extract Helm chart
      run: |
        tar -xzf *.tgz
        ls -la

    - name: Helm dry-run
      run: |
        echo "ðŸš€ Running helm dry-run..."
        helm upgrade --install devops-todolist devops-todolist/ \
          --namespace ${{ inputs.environment }} \
          --create-namespace \
          --set image.repository=${{ env.DOCKER_IMAGE_NAME }} \
          --set image.tag=${{ inputs.image-tag }} \
          --dry-run \
          --debug

    - name: Helm upgrade --install (atomic)
      run: |
        echo "ðŸš€ Deploying to ${{ inputs.environment }}..."
        helm upgrade --install devops-todolist devops-todolist/ \
          --namespace ${{ inputs.environment }} \
          --create-namespace \
          --set image.repository=${{ env.DOCKER_IMAGE_NAME }} \
          --set image.tag=${{ inputs.image-tag }} \
          --atomic \
          --timeout 5m \
          --wait

    - name: Verify deployment
      run: |
        echo " Verifying deployment..."
        kubectl get pods -n ${{ inputs.environment }}
        kubectl get svc -n ${{ inputs.environment }}
        kubectl get deployments -n ${{ inputs.environment }}
        echo " Successfully deployed to ${{ inputs.environment }} environment"
