name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  HELM_VERSION: '3.12.0'
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/devops-todolist

jobs:
  prepare:
    name: Prepare repository
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Upload repository content
      uses: actions/upload-artifact@v4
      with:
        name: repository-content
        path: .
        retention-days: 5

  docker-ci:
    name: Docker CI
    runs-on: ubuntu-latest
    needs: prepare

    steps:
    - name: Download repository content
      uses: actions/download-artifact@v4
      with:
        name: repository-content
        path: .

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install coverage flake8

    - name: Run tests with coverage
      run: |
        if [ -d "tests" ]; then
          coverage run -m pytest tests/ -v
        else
          echo "No tests found, skipping test execution"
        fi

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          ${{ env.DOCKER_IMAGE_NAME }}:latest

    - name: Upload image metadata
      uses: actions/upload-artifact@v4
      with:
        name: image-metadata
        path: |
          Dockerfile
          requirements.txt
        retention-days: 5

  helm-ci:
    name: Helm CI
    runs-on: ubuntu-latest
    needs: docker-ci

    steps:
    - name: Download repository content
      uses: actions/download-artifact@v4
      with:
        name: repository-content
        path: .

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: ${{ env.HELM_VERSION }}

    - name: Helm template
      run: |
        echo "üöÄ Running helm template..."
        if [ -f "chart/Chart.yaml" ]; then
          helm template my-release chart/ \
            --set image.repository=${{ env.DOCKER_IMAGE_NAME }} \
            --set image.tag=${{ github.sha }} \
            --debug
        else
          echo "No chart/Chart.yaml found"
        fi

    - name: Helm lint
      run: |
        echo "üîç Running helm lint..."
        if [ -f "chart/Chart.yaml" ]; then
          helm lint chart/ \
            --set image.repository=${{ env.DOCKER_IMAGE_NAME }} \
            --set image.tag=${{ github.sha }}
        else
          echo "No chart found for linting"
        fi

    - name: Helm package
      run: |
        echo "üì¶ Packaging Helm chart..."
        if [ -f "chart/Chart.yaml" ]; then
          helm package chart/ \
            --version ${{ github.sha }} \
            --app-version ${{ github.sha }}
          ls -la *.tgz
        else
          echo "No chart found for packaging"
          exit 0
        fi

    - name: Upload Helm chart package
      uses: actions/upload-artifact@v4
      with:
        name: helm-chart-package
        path: *.tgz
        retention-days: 5

  call-development-deploy:
    name: Call Development Deployment
    runs-on: ubuntu-latest
    needs: helm-ci
    environment: development

    steps:
    - name: Call reusable deploy workflow
      uses: ./.github/workflows/reusable-deploy.yml
      with:
        environment: development
        image-tag: ${{ github.sha }}
      secrets: inherit

  call-staging-deploy:
    name: Call Staging Deployment
    runs-on: ubuntu-latest
    needs: helm-ci
    environment: staging

    steps:
    - name: Call reusable deploy workflow
      uses: ./.github/workflows/reusable-deploy.yml
      with:
        environment: staging
        image-tag: ${{ github.sha }}
      secrets: inherit
      
